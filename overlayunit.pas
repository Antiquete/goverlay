unit overlayunit;

{$mode objfpc}{$H+}

interface

uses
  Classes, SysUtils, process, Forms, Controls, Graphics, Dialogs, ExtCtrls,
  StdCtrls, Spin, ComCtrls, Buttons, aboutunit;

type

  { Tgoverlayform }

  Tgoverlayform = class(TForm)
    BitBtn1: TBitBtn;
    BitBtn2: TBitBtn;
    BitBtn3: TBitBtn;
    ColorDialog1: TColorDialog;
    crosshairShape: TShape;
    fontsizeComboBox: TComboBox;
    fpslimComboBox: TComboBox;
    GroupBox4: TGroupBox;
    cpuCheckGroup: TCheckGroup;
    gpuCheckGroup: TCheckGroup;
    hidehudCheckBox: TCheckBox;
    hudonoffComboBox: TComboBox;
    Label10: TLabel;
    Label11: TLabel;
    Label13: TLabel;
    Label14: TLabel;
    Label3: TLabel;
    Label4: TLabel;
    Label5: TLabel;
    Label6: TLabel;
    Label7: TLabel;
    Label8: TLabel;
    Label9: TLabel;
    loggingComboBox: TComboBox;
    memCheckGroup: TCheckGroup;
    otherCheckGroup: TCheckGroup;
    paintShape: TShape;
    paintSpeedButton: TSpeedButton;
    toprightShape: TShape;
    topleftShape: TShape;
    bottomrightShape: TShape;
    bottomleftShape: TShape;
    transpTrackBar: TTrackBar;
    crosshairTrackBar: TTrackBar;
    visualGroupBox: TGroupBox;
    visualGroupBox1: TGroupBox;
    vsyncComboBox: TComboBox;
    cpulabel1: TLabel;
    cpulabel2: TLabel;
    cputemplabel1: TLabel;
    cputemplabel2: TLabel;
    cpuusagelabel: TLabel;
    cputemplabel: TLabel;
    cpuusagelabel1: TLabel;
    cpuusagelabel2: TLabel;
    GroupBox1: TGroupBox;
    GroupBox2: TGroupBox;
    Image1: TImage;
    Label1: TLabel;
    Label2: TLabel;
    cpulabel: TLabel;
    Shape1: TShape;
    procedure BitBtn1Click(Sender: TObject);
    procedure BitBtn2Click(Sender: TObject);
    procedure BitBtn3Click(Sender: TObject);
    procedure bottomleftShapeMouseEnter(Sender: TObject);
    procedure bottomrightShapeMouseEnter(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure paintSpeedButtonClick(Sender: TObject);
    procedure topleftShapeMouseEnter(Sender: TObject);
    procedure toprightShapeMouseEnter(Sender: TObject);

  private

  public

  end;

var
  goverlayform: Tgoverlayform;
  createfile: TProcess;
  createconfig: TProcess;
  s: string;
  vsync: integer;
  fpslimit: integer;

implementation

{$R *.lfm}


{ Tgoverlayform }

procedure Tgoverlayform.BitBtn1Click(Sender: TObject);
begin
  // backup old config
  //RunCommand('bash -c ''mv /home/$USER/.config/MangoHud/MangoHud.conf /home/benjamim/.config/MangoHud/Mangohud.bkp.conf''', s);
  RunCommand('bash -c ''rm /home/$USER/.config/MangoHud/MangoHud.conf''', s);
  // Create a new file for overlaygui
  RunCommand('bash -c ''echo "################### File Generated by GOverlay 0.1.2 (alpha) ###################" >> /home/$USER/.config/MangoHud/MangoHud.conf''', s);



  //####################################################################################### PERFORMANCE


    //Setup FPS Limit - fixed at 60fps at the momment
     case fpslimCombobox.ItemIndex of
    0:RunCommand('bash -c ''echo "fps_limit=15" >> /home/$USER/.config/MangoHud/MangoHud.conf''', s);
    1:RunCommand('bash -c ''echo "fps_limit=30" >> /home/$USER/.config/MangoHud/MangoHud.conf''', s);
    2:RunCommand('bash -c ''echo "fps_limit=45" >> /home/$USER/.config/MangoHud/MangoHud.conf''', s);
    3:RunCommand('bash -c ''echo "fps_limit=60" >> /home/$USER/.config/MangoHud/MangoHud.conf''', s);
    4:RunCommand('bash -c ''echo "fps_limit=90" >> /home/$USER/.config/MangoHud/MangoHud.conf''', s);
    5:RunCommand('bash -c ''echo "fps_limit=120" >> /home/$USER/.config/MangoHud/MangoHud.conf''', s);
    6:RunCommand('bash -c ''echo "fps_limit=144" >> /home/$USER/.config/MangoHud/MangoHud.conf''', s);
    7:RunCommand('bash -c ''echo "#fps_limit=" >> /home/$USER/.config/MangoHud/MangoHud.conf''', s);
  end;

  //Setup vsync
  case vsyncCombobox.ItemIndex of
    0:RunCommand('bash -c ''echo "vsync=0" >> /home/$USER/.config/MangoHud/MangoHud.conf''', s);
    1:RunCommand('bash -c ''echo "vsync=1" >> /home/$USER/.config/MangoHud/MangoHud.conf''', s);
    2:RunCommand('bash -c ''echo "vsync=2" >> /home/$USER/.config/MangoHud/MangoHud.conf''', s);
    3:RunCommand('bash -c ''echo "vsync=3" >> /home/$USER/.config/MangoHud/MangoHud.conf''', s);
  end;

  //####################################################################################### MANGOHUD

  //CPU checks
  if cpuCheckgroup.Checked[0] then
  RunCommand('bash -c ''echo "cpu_stats" >> /home/$USER/.config/MangoHud/MangoHud.conf''', s);

  if cpuCheckgroup.Checked[1] then
  RunCommand('bash -c ''echo "cpu_temp" >> /home/$USER/.config/MangoHud/MangoHud.conf''', s);

  if cpuCheckgroup.Checked[2] then
  RunCommand('bash -c ''echo "core_load" >> /home/$USER/.config/MangoHud/MangoHud.conf''', s);



  //GPU checks
  if gpuCheckgroup.Checked[0] then
  RunCommand('bash -c ''echo "gpu_stats" >> /home/$USER/.config/MangoHud/MangoHud.conf''', s);

  if gpuCheckgroup.Checked[1] then
  RunCommand('bash -c ''echo "gpu_temp" >> /home/$USER/.config/MangoHud/MangoHud.conf''', s);

  if gpuCheckgroup.Checked[2] then
  RunCommand('bash -c ''echo "gpu_core_clock" >> /home/$USER/.config/MangoHud/MangoHud.conf''', s);



  //GPU
  if gpuCheckgroup.Checked[0] then
  RunCommand('bash -c ''echo "gpu_stats" >> /home/$USER/.config/MangoHud/MangoHud.conf''', s);



  //Memory checks
  if memCheckgroup.Checked[0] then
  RunCommand('bash -c ''echo "ram" >> /home/$USER/.config/MangoHud/MangoHud.conf''', s);

  if gpuCheckgroup.Checked[1] then
  RunCommand('bash -c ''echo "vram" >> /home/$USER/.config/MangoHud/MangoHud.conf''', s);

  if gpuCheckgroup.Checked[2] then
  RunCommand('bash -c ''echo "io_read,io_write" >> /home/$USER/.config/MangoHud/MangoHud.conf''', s);


  //Others checks
  if otherCheckgroup.Checked[0] then
  RunCommand('bash -c ''echo "frame_timing" >> /home/$USER/.config/MangoHud/MangoHud.conf''', s);

  if otherCheckgroup.Checked[1] then
  RunCommand('bash -c ''echo "time" >> /home/$USER/.config/MangoHud/MangoHud.conf''', s);

  if otherCheckgroup.Checked[2] then
  begin
    RunCommand('bash -c ''echo "crosshair" >> /home/$USER/.config/MangoHud/MangoHud.conf''', s);
    RunCommand('bash -c ''echo "crosshair_size=20" >> /home/$USER/.config/MangoHud/MangoHud.conf''', s);
  end;


  //####################################################################################### VISUALS


  //Setup Default HUD Visualization
  if hidehudcheckbox.Checked=false then
  RunCommand('bash -c ''echo "no_display" >> /home/$USER/.config/MangoHud/MangoHud.conf''', s);

  //Background transparency
   case transptrackbar.Position of
    0:RunCommand('bash -c ''echo "background_alpha=1" >> /home/$USER/.config/MangoHud/MangoHud.conf''', s);
    1:RunCommand('bash -c ''echo "background_alpha=0.9" >> /home/$USER/.config/MangoHud/MangoHud.conf''', s);
    2:RunCommand('bash -c ''echo "background_alpha=0.8" >> /home/$USER/.config/MangoHud/MangoHud.conf''', s);
    3:RunCommand('bash -c ''echo "background_alpha=0.7" >> /home/$USER/.config/MangoHud/MangoHud.conf''', s);
    4:RunCommand('bash -c ''echo "background_alpha=0.6" >> /home/$USER/.config/MangoHud/MangoHud.conf''', s);
    5:RunCommand('bash -c ''echo "background_alpha=0.5" >> /home/$USER/.config/MangoHud/MangoHud.conf''', s);
    6:RunCommand('bash -c ''echo "background_alpha=0.4" >> /home/$USER/.config/MangoHud/MangoHud.conf''', s);
    7:RunCommand('bash -c ''echo "background_alpha=0.3" >> /home/$USER/.config/MangoHud/MangoHud.conf''', s);
    8:RunCommand('bash -c ''echo "background_alpha=0.2" >> /home/$USER/.config/MangoHud/MangoHud.conf''', s);
    9:RunCommand('bash -c ''echo "background_alpha=0.1" >> /home/$USER/.config/MangoHud/MangoHud.conf''', s);
    10:RunCommand('bash -c ''echo "background_alpha=0" >> /home/$USER/.config/MangoHud/MangoHud.conf''', s);
  end;

  //Font Size
  case fontsizeCombobox.ItemIndex of
    0:RunCommand('bash -c ''echo "font_size=19" >> /home/$USER/.config/MangoHud/MangoHud.conf''', s);
    1:RunCommand('bash -c ''echo "font_size=24" >> /home/$USER/.config/MangoHud/MangoHud.conf''', s);
    2:RunCommand('bash -c ''echo "font_size=40" >> /home/$USER/.config/MangoHud/MangoHud.conf''', s);
  end;


  //HUD Position
  if toprightShape.Brush.Style=bsSolid then
  RunCommand('bash -c ''echo "position=top-right" >> /home/$USER/.config/MangoHud/MangoHud.conf''', s);

  if topleftShape.Brush.Style=bsSolid then
  RunCommand('bash -c ''echo "position=top-left" >> /home/$USER/.config/MangoHud/MangoHud.conf''', s);

  if bottomrightShape.Brush.Style=bsSolid then
  RunCommand('bash -c ''echo "position=bottom-right" >> /home/$USER/.config/MangoHud/MangoHud.conf''', s);

  if bottomleftShape.Brush.Style=bsSolid then
  RunCommand('bash -c ''echo "position=bottom-left" >> /home/$USER/.config/MangoHud/MangoHud.conf''', s);

  //####################################################################################### KEYBINDINGS


    //HUD ON / OFF
  case hudonoffCombobox.ItemIndex of
    0:RunCommand('bash -c ''echo "toggle_hud=F10" >> /home/$USER/.config/MangoHud/MangoHud.conf''', s);
    1:RunCommand('bash -c ''echo "toggle_hud=F11" >> /home/$USER/.config/MangoHud/MangoHud.conf''', s);
    2:RunCommand('bash -c ''echo "toggle_hud=F12" >> /home/$USER/.config/MangoHud/MangoHud.conf''', s);
  end;

     //LOGGING
  case loggingCombobox.ItemIndex of
    0:RunCommand('bash -c ''echo "toggle_logging=F1" >> /home/$USER/.config/MangoHud/MangoHud.conf''', s);
    1:RunCommand('bash -c ''echo "toggle_logging=F2" >> /home/$USER/.config/MangoHud/MangoHud.conf''', s);
    2:RunCommand('bash -c ''echo "toggle_logging=F3" >> /home/$USER/.config/MangoHud/MangoHud.conf''', s);
  end;

end;

procedure Tgoverlayform.BitBtn2Click(Sender: TObject);
begin
  RunCommand('bash -c ''MANGOHUD=1 vkcube''', s);
end;

procedure Tgoverlayform.BitBtn3Click(Sender: TObject);
begin
  aboutForm.show;
end;

procedure Tgoverlayform.bottomleftShapeMouseEnter(Sender: TObject);
begin
  //Highlight main button
  bottomleftShape.Brush.Style:=bsSolid;

  //Clear other buttons
  bottomrightShape.Brush.Style:=bsClear;
  toprightShape.Brush.Style:=bsClear;
  topleftShape.Brush.Style:=bsClear;
end;

procedure Tgoverlayform.bottomrightShapeMouseEnter(Sender: TObject);
begin
   bottomrightShape.Brush.Style:=bsSolid;

  //Clear other buttons
  bottomleftShape.Brush.Style:=bsClear;
  toprightShape.Brush.Style:=bsClear;
  topleftShape.Brush.Style:=bsClear;
end;

procedure Tgoverlayform.FormCreate(Sender: TObject);
begin
  Left:=(Screen.Width-Width)  div 2;
  Top:=(Screen.Height-Height) div 2;
end;

procedure Tgoverlayform.paintSpeedButtonClick(Sender: TObject);
begin
    if colordialog1.Execute then
    paintShape.Brush.Color:=(colordialog1.Color);
end;

procedure Tgoverlayform.topleftShapeMouseEnter(Sender: TObject);
begin
  topleftShape.Brush.Style:=bsSolid;

  //Clear other buttons
  bottomleftShape.Brush.Style:=bsClear;
  bottomrightShape.Brush.Style:=bsClear;
  toprightShape.Brush.Style:=bsClear;
end;

procedure Tgoverlayform.toprightShapeMouseEnter(Sender: TObject);
begin
  toprightShape.Brush.Style:=bsSolid;

  //Clear other buttons
  bottomleftShape.Brush.Style:=bsClear;
  bottomrightShape.Brush.Style:=bsClear;
  topleftShape.Brush.Style:=bsClear;
end;





end.

